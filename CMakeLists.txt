project(Core CXX)
cmake_minimum_required(VERSION 2.8)

set (CMAKE_CXX_STANDARD 14)
set (CMAKE_CXX_STANDARD_REQUIRED ON)
set (CMAKE_COLOR_MAKEFILE ON)
set (CMAKE_CXX_EXTENSIONS OFF)

if (NOT CMAKE_BUILD_TYPE)
    message(STATUS "Default build type 'Debug'")
    set(CMAKE_BUILD_TYPE DEBUG CACHE STRING "" FORCE )
else()
    string(TOUPPER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE)
    message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
endif()

option(CORE_SPDLOG_SUPPORT "SpdLog will be added as logger impel" OFF)
if(CORE_SPDLOG_SUPPORT)
    set(SPDLOG_SRC src/SpdLogLogger.cpp src/SpdLogTraceListener.cpp)
else()
    set(SPDLOG_SRC)
endif()

if(CORE_PRE_COMPILE)
    option(CORE_STAND_ALONE "Core is compiled as a sole project" ON)
    if(CORE_STAND_ALONE AND CORE_SPDLOG_SUPPORT)
            set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
            list(APPEND CMAKE_PREFIX_PATH ${CURRENT_PROJECT_3RD_LOC})
            find_package(SpdLog)
            include(installThirdParty)
    endif()
endif()

#Compile staticly
if(CORE_COMPILE)
    if(CORE_STAND_ALONE)
        set(PROJECT_3RD_LOC ${PROJECT_SOURCE_DIR}/Third_Party)
    endif()
    include_directories(${PROJECT_3RD_LOC}/include ${CMAKE_CURRENT_SOURCE_DIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
    add_library(Core SHARED src/AsyncExecutor.cpp src/AsyncTask.cpp src/AutoResetEvent.cpp src/ChildProcess.cpp src/CommandLine.cpp src/Directory.cpp src/Environment.cpp src/Logger.cpp src/Pipe.cpp src/Process.cpp src/TcpSocket.cpp src/Thread.cpp src/TimedAsyncExecutor.cpp ${SPDLOG_SRC})
endif()
